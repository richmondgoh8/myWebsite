<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SinLucidious</title>
    <link>/index.xml</link>
    <description>Recent content on SinLucidious</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2017 - 2018, rlc4u; all rights reserved.</copyright>
    <lastBuildDate>Fri, 21 Apr 2017 13:50:46 +0200</lastBuildDate>
    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Simply Said - Website Crawler</title>
      <link>/post/webcrawler/</link>
      <pubDate>Fri, 21 Apr 2017 13:50:46 +0200</pubDate>
      
      <guid>/post/webcrawler/</guid>
      <description>&lt;p&gt;Today, we are going to explore building a web scraper to mark a milestone in our progression towards learning GO. This exercise will be emphasizing on the skills that you should already be familiar with. It will cover skills such as:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Scenario&lt;/em&gt; - Crawl a page and deeper into the relative urls and ensure that there are no dead links in any of your website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sneak Preview&lt;/strong&gt;
&lt;img src=&#34;/images/snippet.png&#34; class=&#34;img-responsive center-block&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;go run crawl_less.go http://example.com
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Usage of reading a command line argument&lt;/li&gt;
&lt;li&gt;Scanning a webpage for links&lt;/li&gt;
&lt;li&gt;Going a level deeper and scanning for more links&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;//crawl.go
func main() {
	flag.Parse()

	args := flag.Args()
	fmt.Println(args)
	if len(args) &amp;lt; 1 {
		fmt.Println(&amp;quot;Please specify start page&amp;quot;)
		os.Exit(1)
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the current main file, this will be the code that will be responsbile for taking in command arguments and checking to ensure that there is 1 url in the argument after running&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;go run crawl.go http://rlc4u.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, to spice things up further, we create a function called retrieve which will proceed to collect the full html elements of the indicated link and print it out.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func retrieve(uri string) {

	resp, err := http.Get(uri)
	if err != nil {
		panic(err)
	}
	defer resp.Body.Close()

	body, _ := ioutil.ReadAll(resp.Body)
	fmt.Println(string(body))
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We will now try to get the terminal to print that all links in the page which include relative links&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;links := collectlinks.All(resp.Body) // Here we use the collectlinks package
for _, link := range links {
  fmt.Println(link) // an iterator in many other languages get all links including relative
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These statements will proceed to run a number of iterations based on the numbers of links that the library has collected for us which includes relative link.&lt;/p&gt;

&lt;p&gt;Now that we have figured out what exactly, resp.body contains, we no longer need to see them anymore. The idea behind the next step would consist of extracting all elements containing the tag &amp;ldquo;a href&amp;rdquo;. This time, we will be using a library of &lt;a href=&#34;https://github.com/jackdanger/collectlinks&#34;&gt;Jack Danger&lt;/a&gt; that will do those extractions for us.&lt;/p&gt;

&lt;p&gt;Currently, we have a bunch of urls with no base url. We will now try to convert all relative urls to an absolute url.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func retrieve(uri string) {
...
    ...
	for _, link := range links {
		absolute := fixUrl(link, uri)
		fmt.Println(absolute)
	}
}

func fixUrl(href, base string) string {
	uri, err := url.Parse(href)
	if err != nil {
		return &amp;quot;&amp;quot;
	}
	baseUrl, err := url.Parse(base)
	if err != nil {
		return &amp;quot;&amp;quot;
	}
	uri = baseUrl.ResolveReference(uri)
	return uri.String()
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, once we print our urls, we will see thats all our paths that was relative is now converted to absolute urls&lt;/p&gt;

&lt;p&gt;Going deeper, we want to ensure that the links to want to crawl deeper are accessible and we proceed to add in the following code.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// retrieve.go
...
  ...
for _, link := range links {
  //fmt.Println(link) // an iterator in many other languages get all links including relative
  absolute := fixUrl(link, uri)
  //fmt.Println(absolute)
  resp, _ := http.Get(absolute)

  switch resp.StatusCode {
  case 200:
    fmt.Println(&amp;quot;[Up] \t\t&amp;quot;, absolute)
  default:
    fmt.Println(&amp;quot;[Down] \t\t&amp;quot;, absolute)
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We make use of maps in order to prevent the crawler from digging deeper into the same url which would prevent an endless loop. A Sample of what it looks like is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;visitedPage   = make(map[string]bool)

if strings.Contains(absolute, baseURL) &amp;amp;&amp;amp; !visitedPage[absolute] {
			checkWebStatus(absolute, uri)
		}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We proceed to upgrade our retrieve.go in such a way that we throw the url into a queue and allows our crawler to go digging into the urls that it has found The method we are using is recursive.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;//replacement of retrieve.go
func enqueue(uri string) {
	//fmt.Println(&amp;quot;fetching&amp;quot;, uri)
	visitedPage[uri] = true
	resp, err := http.Get(uri)
	if err != nil {
		return
	}
	defer resp.Body.Close()
	links := collectlinks.All(resp.Body)
	for _, link := range links {
		absolute := fixUrl(link, uri)
		if !strings.Contains(absolute, baseURL) &amp;amp;&amp;amp; !visitedLinks[absolute] {
			visitedLinks[absolute] = true
			checkWebStatus(absolute, uri)
		}
		if strings.Contains(absolute, baseURL) &amp;amp;&amp;amp; !visitedPage[absolute] {
			UrlCrawlCount++
			//fmt.Println(absolute)
			checkWebStatus(absolute, uri)
			enqueue(absolute)
		}
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you read the code, you will realize that we have applied the same theory to links so as to prevent checking the web status of the same link twice. With that, you have completed a fully-functional web crawler that is capable of digging into your website ensuring that the links in them are kept up to date.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package main

//Recurisve Web Crawling
import (
	&amp;quot;flag&amp;quot;
	&amp;quot;fmt&amp;quot;
	&amp;quot;github.com/briandowns/spinner&amp;quot;
	&amp;quot;github.com/jackdanger/collectlinks&amp;quot;
	&amp;quot;net/http&amp;quot;
	&amp;quot;net/url&amp;quot;
	&amp;quot;os&amp;quot;
	&amp;quot;strings&amp;quot;
	&amp;quot;time&amp;quot;
)

var (
	visitedPage   = make(map[string]bool)
	visitedLinks  = make(map[string]bool)
	BrokenPage    = make(map[string]string)
	UrlCrawlCount = 0
	Linkcount     = 0
	brokenLinks   = 0
	baseURL       = &amp;quot;&amp;quot;
)

func main() {
	flag.Parse()
	args := flag.Args()
	//fmt.Println(args)
	if len(args) &amp;lt; 1 {
		fmt.Println(&amp;quot;Please specify start page&amp;quot;)
		os.Exit(1)
	}
	baseURL = args[0]

	s := spinner.New(spinner.CharSets[9], 100*time.Millisecond)
	s.Prefix = fmt.Sprintf(&amp;quot;crawling %s, please wait &amp;quot;, baseURL)
	s.Start()
	enqueue(baseURL)

	tmpCount := 0
	s.Stop()
	fmt.Println(&amp;quot;================================================================================================&amp;quot;)
	fmt.Println(&amp;quot;================================================================================================&amp;quot;)
	fmt.Println(&amp;quot;Broken Links:&amp;quot;, brokenLinks, &amp;quot;Ok Links:&amp;quot;, Linkcount, &amp;quot;Web Pages Crawled:&amp;quot;, UrlCrawlCount)
	for key, value := range BrokenPage {
		tmpCount++
		fmt.Println(fmt.Sprintf(&amp;quot;[%v] \n broken  : %s \n source: %s&amp;quot;, tmpCount, key, value))
	}
}

// fixUrl converts all relative links to absolute links
func fixUrl(href, base string) string {
	uri, err := url.Parse(href)
	if err != nil {
		return &amp;quot;&amp;quot;
	}
	baseUrl, err := url.Parse(base)
	if err != nil {
		return &amp;quot;&amp;quot;
	}
	uri = baseUrl.ResolveReference(uri)
	return uri.String()
}

func enqueue(uri string) {
	//fmt.Println(&amp;quot;fetching&amp;quot;, uri)
	visitedPage[uri] = true
	resp, err := http.Get(uri)
	if err != nil {
		return
	}
	defer resp.Body.Close()
	links := collectlinks.All(resp.Body)
	for _, link := range links {
		absolute := fixUrl(link, uri)
		if !strings.Contains(absolute, baseURL) &amp;amp;&amp;amp; !visitedLinks[absolute] {
			visitedLinks[absolute] = true
			checkWebStatus(absolute, uri)
		}
		if strings.Contains(absolute, baseURL) &amp;amp;&amp;amp; !visitedPage[absolute] {
			UrlCrawlCount++
			//fmt.Println(absolute)
			checkWebStatus(absolute, uri)
			enqueue(absolute)
		}
	}
}

// checkWebStatus checks all given links if they are invalid
func checkWebStatus(urlParams string, baseline string) {
	resp, _ := http.Get(urlParams)
	if resp != nil &amp;amp;&amp;amp; resp.StatusCode == 200 {
		Linkcount++
	} else {
		brokenLinks++
		BrokenPage[urlParams] = baseline
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Get the full source code from &lt;a href=&#34;https://github.com/richmondgoh8/web-crawler&#34;&gt;My Github Repo&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Simply Said - China Infrastructure Deployment</title>
      <link>/post/china-deployment/</link>
      <pubDate>Fri, 14 Apr 2017 13:50:46 +0200</pubDate>
      
      <guid>/post/china-deployment/</guid>
      <description>&lt;p&gt;In this blog, we will be exploring the way of deploying the current service infrasture that you have built locally to deploying it on a server in china via Alibaba Cloud aka Aliyun.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Before starting on this tutorial, the following should be done:&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Services Created and running locally.&lt;/li&gt;
&lt;li&gt;Ensure DockerFile have been build.&lt;/li&gt;
&lt;li&gt;Understanding of &lt;a href=&#34;https://docs.docker.com/engine/getstarted/step_four/&#34;&gt;Docker&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://hub.docker.com/_/haproxy/&#34;&gt;HAProxy&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Successful Implementation&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Register an account with both Aliyun CN and INTL Account&lt;/li&gt;
&lt;li&gt;Login into the CN account &amp;amp; Create an &lt;a href=&#34;https://m.aliyun.com/yunqi/articles/9102&#34;&gt;Image WareHouse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;At this point, you should have successful push the built docker image to aliyun registry store.&lt;/li&gt;
&lt;li&gt;Now, we proceed to Creating an ECS Instance (2 core, 8GB Ram, Ubuntu 16.0.4)&lt;/li&gt;
&lt;li&gt;After creating an instance, you will be given an Internet Address of that Instance.&lt;/li&gt;
&lt;li&gt;Proceed to SSH (or Putty for Windows) into the virtual machine.&lt;/li&gt;
&lt;li&gt;Install &lt;a href=&#34;https://docs.docker.com/engine/getstarted/step_one/&#34;&gt;Docker&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Docker Compose&lt;/a&gt; in the ECS Machine&lt;/li&gt;
&lt;li&gt;Create a &lt;a href=&#34;https://docs.docker.com/compose/compose-file/compose-file-v2/#dependson&#34;&gt;docker-compose.yml&lt;/a&gt; file in a directory in the Ubuntu Machine&lt;/li&gt;
&lt;li&gt;Ensure that HAProxy is the first image you build. You can check the statistics after building the image via http://”Internet IP”/stats/haproxy&lt;/li&gt;
&lt;li&gt;Run&lt;code&gt;Docker-Compose Up&lt;/code&gt; and ensure that services are connected and working.&lt;/li&gt;
&lt;li&gt;Enjoy&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;FAQ&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Why do we have both an intl and cn aliyun account?&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Currently the intl account do not have the the registry image warehouse and is only available in the cn aliyun account. The reason why we do not do everything in the cn aliyun account is because it requires a &amp;ldquo;real-name&amp;rdquo; authentication that we currently do not possess and is unable to do.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Why do we not use container service?&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Facing difficulties with Container Services linking multi containers services. Creating a custom image from the services provided in the international account could not pull from the registry properly. Orchestration templates formats in building the multi containers link file have to be in Aliyun’s format context.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Why did we have to set up OpenVPN through Digital Ocean?&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Accessing Aliyun Cloud Website from Singapore would redirect us to the Internal Version of the website which did not provide us with the features we require. Proxy would not work as it does not enable scripting.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Why didn’t we use third party registry such as docker hub?&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The main reason behind not using third-party registry is that they are costly. Another reason is that we will never know when the china’s firewall will block connection from external sources. Integration with third party registry might not be as optimised. Moreover, ensuring all registries have to be in ‘private’ mode.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Simply Said - Reducing Your Age</title>
      <link>/post/becoming-younger/</link>
      <pubDate>Fri, 07 Apr 2017 13:50:46 +0200</pubDate>
      
      <guid>/post/becoming-younger/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Death is a mystery. It is a scary darkness that is almost impossible to fanthom. If life is like a game, some people think that you would respawn in a different place, some people think that you replay the good bits of life in your brain over again, some people think that you enter a different dimension.&lt;/p&gt;

&lt;p&gt;
&lt;/br&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/gWIi6Pytde8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;

&lt;/br&gt;
The question begins as logical thinker, is there a way to cheat death? How can we extend our life way beyond the natural lifespan apart from uploading our conscience into the net or making use of &lt;a href=&#34;http://www.nbcnews.com/tech/innovation/company-will-freeze-your-dead-body-200-000-n562551&#34;&gt;cryopreservation&lt;/a&gt;. One possible way we could do this is by reducing our biological age to ensure that our system is always up and running together with some tissue regeneration.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;High Intensity Interval Training (HIIT) 15mins/day - Strength/Resistance

&lt;ul&gt;
&lt;li&gt;This will not only help to improve your fitness levels but help you to feel energetic through the day!&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Sleep 7-8 Hours a day

&lt;ul&gt;
&lt;li&gt;Sleep Deprivation can cause your life span to shorten by miles. Read more about it &lt;a href=&#34;http://www.webmd.com/sleep-disorders/features/10-results-sleep-loss#1&#34;&gt;here&lt;/a&gt; Use the &lt;a href=&#34;http://sleepcalculator.com/&#34;&gt;sleep calculator&lt;/a&gt; to help plan your sleep better&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/post/losing-weight/&#34;&gt;Limit Toxins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pocketmindfulness.com/6-mindfulness-exercises-you-can-try-today/&#34;&gt;Healthy Mind - Meditation &amp;amp; Yoga&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Social Connection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Always remember that to live a long life is to lead a life with a healthy mind and body. You can begin to see results in 2 weeks just by removing toxins from your body and building a healthly mind through mediation exercises. HIIT exercises with a restful sleep will work hand in hand to making you feel more positive in life and feeling younger, easing up the things that you were incapable of doing efficiently as before.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Simply Said - Deploying Hugo On AWS</title>
      <link>/post/deploy-blog/</link>
      <pubDate>Fri, 31 Mar 2017 13:50:46 +0200</pubDate>
      
      <guid>/post/deploy-blog/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Initially, I have been using Web Hosting Hub with wordpress installed with it to run my website. I got my domain name from OpenSRS. I am quite happy with their services and support. However, It has come to the point that I am clearly paying too much for just hosting a blog which stood at about 13 bucks a month.&lt;/p&gt;

&lt;p&gt;
&lt;p&gt;This is where I chanced upon Amazon Web Services. Not being a good front-end developer, I went around in search of a template where I found Hugo, a static web builder developed with Golang. Below list the ways i went around trying to switch from web hosting hub to AWS. It was a rather fruitful experience as my overhead became less than 1 dollar a month.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Feel free to view a step by step tutorial on deploying hugo with Amazon Web Services by &lt;a href=&#34;http://bezdelev.com/post/hugo-aws-lambda-static-website/&#34;&gt;Ilya Bezdelev&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In a nutshell, key points that you should note involves:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hugo website

&lt;ul&gt;
&lt;li&gt;Follow Hugo Tutorial on Creating Website &lt;a href=&#34;https://gohugo.io/overview/quickstart/&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;example.com bucket

&lt;ul&gt;
&lt;li&gt;serves the website content&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;www.example.com bucket

&lt;ul&gt;
&lt;li&gt;redirects to example.com endpoint&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;input.example.com bucket&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;contains all hugo related files&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Default AWS Endpoint Domain Name&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Storage Buckets (used for containing Hugo files and serving web pages to visitors to site)&lt;/li&gt;
&lt;li&gt;Lambda ( piece of code that triggers downloading of static files from hugo input to output bucket)
&lt;/br&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Custom Domain Name&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CloudFront Distribution (CDN)&lt;/li&gt;
&lt;li&gt;Route 53
&lt;/br&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Security of AWS resources will be managed by Identity &amp;amp; Access Management(IAM)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;AWS CloudFront consist of CDN which helps to speed up your website by&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Route 53 is used as a DNS Service as well as Domain Name Registration&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Amazon Route 53 is an authoritative Domain Name System (DNS) service. DNS is the system that translates human-readable domain names (example.com) into IP addresses (192.0.2.0). With authoritative name servers in data centers all over the world, Route 53 is reliable, scalable, and fast.
TLD = Top Level Domain&lt;/p&gt;

&lt;p&gt;With all these in hand, Begin your journey to hosting your very own blog.&lt;/p&gt;

&lt;p&gt;Remember &amp;ndash;&amp;gt; Create Hugo Website &amp;ndash;&amp;gt; Create AWS Web Service &amp;ndash;&amp;gt; Create S3 to store Hugo Files &amp;ndash;&amp;gt; DNS with hosted zone to serve your example.com to the world.&lt;br /&gt;
&lt;/br&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Disclaimer: feel free to read up more about &lt;a href=&#34;https://gohugo.io/overview/introduction/&#34;&gt;Hugo&lt;/a&gt; to find out about the other ways to host Hugo files. A free alternative would be netlify!&lt;/em&gt;
&lt;em&gt;PS - Web Hosting Hub Support is Excellent&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Simply Said - Weight Loss</title>
      <link>/post/losing-weight/</link>
      <pubDate>Fri, 24 Mar 2017 13:50:46 +0200</pubDate>
      
      <guid>/post/losing-weight/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Losing weight can be painful, may seem impossible, counting calories can it exhausting. Been there, done that, backfired and crashed at. I proceeded to explore betters ways to lose weight, below includes some of the measures that I have found to work to effectively lose weight without losing your life and sense of self.&lt;/p&gt;

&lt;p&gt;Losing weight does not neccessarily means it is about going on a diet that causes you immense emotional pain. To help increase your metabolism, you can seek to use 2 types of method, either by drinking honey cinnamon water or a ginger lemon tea.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/images/cinnamon.jpg&#34; class=&#34;img-responsive center-block&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;preparations-include&#34;&gt;Preparations include&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1 tsp of Honey&lt;/li&gt;
&lt;li&gt;1 tsp of Ceylon Cinnamon&lt;/li&gt;
&lt;li&gt;250ml of Hot Water&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Stir well, allow it to rest for 10 minutes and proceed to drink in the morning just after you wake up.
+ Ginger Lemon Tea&lt;br /&gt;
&lt;img src=&#34;/images/ginger.jpg&#34; class=&#34;img-responsive center-block&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;preparations-include-1&#34;&gt;Preparations include&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Simmer Ginger with Water for 30 minutes&lt;/li&gt;
&lt;li&gt;Add Lemon Slices
Stir well, simmer for 20 minutes and proceed to drink after
You can read more about the benefits of honey, the differences between Cassia &amp;amp; Ceylon Cinnamon by clicking on the keywords.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All these will help in aiding you by incrasing your metabolism to allow fats to be burn faster and easier. To further increase your weight loss process and helping to keep your body in a better condition, proceed to lift weights/ perform resistance training up to 3 times/ week. Its training only can be done as between 15-45 minutes. Refer to &lt;a href=&#34;http://darebee.com/&#34;&gt;Darebee&lt;/a&gt; for training programmes in which you can follow especially the workout cards.
&lt;/br&gt;
&lt;/br&gt;&lt;/p&gt;

&lt;h4 id=&#34;disclaimer&#34;&gt;Disclaimer&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Use raw organic honey with no sugars.&lt;/li&gt;
&lt;li&gt;For every 1 cup of water : (1 Tbsp of Honey, &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt; Tbsp of Ceylon Cinnamon)&lt;/li&gt;
&lt;li&gt;Keep carbohydrates and sugar intake to a minimum level. &lt;strong&gt;Note: Minimum not None&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Simply Said - Types of Developers</title>
      <link>/post/developer-stack/</link>
      <pubDate>Fri, 17 Mar 2017 13:50:46 +0200</pubDate>
      
      <guid>/post/developer-stack/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Congratulations to taking your first step into the world of development. When you hear the word &amp;ldquo;programmer&amp;rdquo;, what first comes to your mind? Are there different type of programmers? If they are, what kind of programmers are they?&lt;/p&gt;

&lt;p&gt;
Generically speaking, there are many different types of programmers. Each with different roles, skillsets and mindset. In today&amp;rsquo;s context, I will be talking about 5 different kind of programmers. So lets begin!&lt;/p&gt;

&lt;p&gt;Programmers are broken down into:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Web Developers

&lt;ul&gt;
&lt;li&gt;Short Answer: They build and maintain website. You can get a more detailed explaination &lt;a href=&#34;http://www.theodinproject.com/courses/introduction-to-web-development/lessons/what-a-web-developer-does&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Application Developer&lt;/li&gt;
&lt;li&gt;Game Developer&lt;/li&gt;
&lt;li&gt;UI Developer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When you branch into any of the fields, all of them will have 2 different sub-categories which will be front-end and back-end developer. So your title could be something like a Front-End Web Developer or a Back-End Application Developer. For the more ambitious, they can proceed to becoming a full-stack developer whereby they would be able to handle both the front-end and back-end aspect of the application that they are building.&lt;/p&gt;

&lt;h3 id=&#34;important-distinctions&#34;&gt;Important Distinctions&lt;/h3&gt;

&lt;h4 id=&#34;front-end-developer&#34;&gt;Front-End Developer?&lt;/h4&gt;

&lt;p&gt;&amp;ldquo;Front End&amp;rdquo; typically refers to the stuff that you actually see on the website in the browser. Languages that they primarily focus on includes: HTML, CSS, Javascript, JQuery and React.js. Despite being in charge of making things that appear to the visitor&amp;rsquo;s eyes, the &amp;ldquo;pretty&amp;rdquo; website is still designed by another person with the role of a &amp;ldquo;designer&amp;rdquo;. Some of the things they do include making buttons, menus, formatting of texts, transitions and modals.&lt;/p&gt;

&lt;h4 id=&#34;back-end-developer&#34;&gt;Back-End Developer?&lt;/h4&gt;

&lt;p&gt;&amp;ldquo;Back End&amp;rdquo; typically refers to the stuff that happens behind-the-scene. They are more focused on connecting the website request to the correct services which would include ensuring that the right data are passing through the browswer, connecting services to databases, implementing infrasture and mapping the ports of the services. They ensure that all the buttons and data collected are moving as intended.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/contact/</guid>
      <description>

&lt;h1 id=&#34;we-are-here-to-help-you&#34;&gt;We are here to help you&lt;/h1&gt;

&lt;p&gt;Feel free to message me should you be interested to work with me or require my assistance based on any of the skills that I possess. I am always looking to share business ideas and value with one another. Do not hesitate to message me should you wish to know anything more about me.&lt;/p&gt;

&lt;p&gt;You can also choose to contact me at my mobile number at 9273 2203 (SG).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>FAQ</title>
      <link>/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/faq/</guid>
      <description>

&lt;h5 id=&#34;i-will-seek-to-answer-some-of-the-questions-that-are-commonly-asked-to-me-over-here-if-you-have-further-questions-or-would-like-to-get-in-touch-with-me-feel-free-to-leave-me-an-email-via-the-contact-form&#34;&gt;I will seek to answer some of the questions that are commonly asked to me over here. If you have further questions or would like to get in touch with me, feel free to leave me an email via the contact form.&lt;/h5&gt;

&lt;h3 id=&#34;1-what-is-this-blog-all-about&#34;&gt;1. WHAT IS THIS BLOG ALL ABOUT?&lt;/h3&gt;

&lt;p&gt;This blog will not just be about reducing your biological age, keep yourself healthy and will also aim to keep you in the loop about the technological world that we are currently exposed to. I will host some of the projects that I have completed on github.com and will leave the links in the pages.&lt;/p&gt;

&lt;h3 id=&#34;2-what-kind-of-technology-have-you-played-with&#34;&gt;2. WHAT KIND OF TECHNOLOGY HAVE YOU PLAYED WITH?&lt;/h3&gt;

&lt;p&gt;Languages that I have tinkered with involves:
* Golang
* C#
* Lua
* Javascript, HTML, CSS
* Python
* Ruby&lt;/p&gt;

&lt;h3 id=&#34;3-sdk-that-you-work-with&#34;&gt;3. SDK THAT YOU WORK WITH?&lt;/h3&gt;

&lt;p&gt;So far, I have worked with Corona SDK, Unity 3D, Titanium, Zero Engine, Wordpress, Hugo&lt;/p&gt;

&lt;h3 id=&#34;4-how-do-you-seek-to-attain-immortality-prolonged-life&#34;&gt;4. HOW DO YOU SEEK TO ATTAIN IMMORTALITY/ PROLONGED LIFE?&lt;/h3&gt;

&lt;p&gt;I believed that we are judged not by our real age but by our biological age. Having a biological age of 50 but a real age of 25 will still hamper you from living a long life. In my blog, I will procced to share my journey to reducing my biological age, balancing your weight issues and having an active lifestyle. The tips shared with you will be doable with a hectic lifestyle.&lt;/p&gt;

&lt;h3 id=&#34;5-how-are-your-content-managed&#34;&gt;5. HOW ARE YOUR CONTENT MANAGED&lt;/h3&gt;

&lt;p&gt;I will categories the content available in my blog with a #something in the title, you can search for the relevant subjects via the search function which is &amp;ldquo;ctrl f&amp;rdquo;&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;The opinions expressed in this article are the author&amp;rsquo;s own and do not reflect the view of the National Institutes of Health, the Department of Health and Human Services, or the Singapore government.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Portfolio</title>
      <link>/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>

&lt;h4 id=&#34;below-will-showcase-a-bunch-of-links-that-you-can-clink-in-order-to-view-some-of-my-works&#34;&gt;Below will showcase a bunch of links that you can clink in order to view some of my works&lt;/h4&gt;

&lt;h3 id=&#34;my-experience&#34;&gt;My Experience&lt;/h3&gt;

&lt;p&gt;&lt;p align=&#34;center&#34;&gt;
    &lt;img src=&#34;/images/myavatar.png&#34; width=&#34;150&#34;&gt;
&lt;/p&gt;&lt;/p&gt;

&lt;h4 id=&#34;i-have-tinkered-about-with-hugo-openvpn-digital-ocean-aliyun-aws-endpoint-creation-grpc-clients-server-programming-netlify-arangodb-nosql-database-nsq-message-queue-arangodrivers-gitlab-twilio-mailgun-wordpress-cms-email-templating-in-my-blog-i-will-categorizing-information-between-simply-said-series-and-in-depth-explanation-p&#34;&gt;I have tinkered about with hugo, OpenVPN(Digital Ocean), Aliyun, AWS, Endpoint Creation, GRPC Clients, Server Programming, Netlify, ArangoDB NOSQL database, NSQ (Message Queue), ArangoDrivers, Gitlab, Twilio, Mailgun, Wordpress CMS, Email Templating. In my blog, I will categorizing information between &amp;ldquo;Simply Said Series&amp;rdquo; and in-depth explanation.&lt;/p&gt;&lt;/h4&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;

&lt;h4 id=&#34;in-my-experience-with-unity-3d-i-have-developed-a-story-based-structure-in-which-anyone-can-use-to-develop-a-story-for-their-games-it-includes-an-template-which-anyone-can-grab-and-use-it-as-a-system-feel-free-to-grab-the-source-code-from-my-github-repo-https-github-com-richmondgoh8-astoryadventure-you-can-also-proceed-to-view-a-short-story-developed-using-my-system-via-the-itch-io-you-can-view-my-game-at-unity-story-adventure-https-richmondgoh8-itch-io-the-great-escape&#34;&gt;In my experience with unity 3d, I have developed a story based structure in which anyone can use to develop a story for their games. It includes an template which anyone can grab and use it as a system. Feel free to grab the source code from my &lt;a href=&#34;https://github.com/richmondgoh8/AStoryAdventure&#34;&gt;Github Repo&lt;/a&gt;. You can also proceed to view a short story developed using my system via the itch.io. You can view my game at &lt;a href=&#34;https://richmondgoh8.itch.io/the-great-escape&#34;&gt;Unity Story Adventure&lt;/a&gt;.&lt;/h4&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;

&lt;h4 id=&#34;i-have-also-created-2-games-with-my-team-using-zero-engine-and-they-are-namely-swirl-a-movement-recording-based-game-and-demonice-a-game-where-the-player-will-try-to-balance-his-life-on-a-very-thin-life-feel-free-to-view-the-source-code-at-zeroengine-demonice-swirl-https-github-com-richmondgoh8-swirl-zero-demonice-or-download-the-exe-file-at-google-drive-https-drive-google-com-drive-folders-0bzffx1-lpainzfjjts0tnzm1utq&#34;&gt;I have also created 2 games with my team using Zero Engine and they are namely swirl; a movement recording based game and demonice; a game where the player will try to balance his life on a very thin life. Feel free to view the source code at &lt;a href=&#34;https://github.com/richmondgoh8/Swirl_Zero_Demonice&#34;&gt;ZeroEngine - Demonice &amp;amp; Swirl&lt;/a&gt; or download the .exe file at &lt;a href=&#34;https://drive.google.com/drive/folders/0BzffX1_lPaINZFJJTS0tNzM1UTQ&#34;&gt;Google Drive&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;

&lt;h4 id=&#34;during-my-spare-time-i-have-tinkered-with-corona-sdk-using-lua-language-to-build-2-ios-mobile-applications-namely-catch-the-beat-2-and-lost-sense-catch-the-beat-2-revolves-arounds-the-player-trying-to-prevent-music-from-dying-in-the-virtual-world-it-seeks-to-test-the-player-s-reaction-skills-a-demo-of-the-game-can-be-found-in-ios-app-catch-the-beat-2-https-itunes-apple-com-sg-app-catch-the-beat-2-id1023323140-mt-8-you-can-also-download-lost-sense-at-ios-app-lost-sense-https-itunes-apple-com-sg-app-lost-sense-id995634840-mt-8-which-simply-makes-use-of-the-weather-api-to-inform-the-user-of-the-weather-in-singapore-and-allow-them-to-plan-their-schedule-accordingly-to-catch-either-the-sunrise-or-sunset&#34;&gt;During my spare time, I have tinkered with Corona SDK using Lua Language to build 2 IOS mobile applications namely &amp;ldquo;Catch The Beat 2&amp;rdquo; and &amp;ldquo;Lost Sense&amp;rdquo;. Catch The Beat 2 revolves arounds the player trying to prevent music from dying in the virtual world. It seeks to test the player&amp;rsquo;s reaction skills. A demo of the game can be found in &lt;a href=&#34;https://itunes.apple.com/sg/app/catch-the-beat-2/id1023323140?mt=8&#34;&gt;IOS App - Catch The Beat 2&lt;/a&gt;. You can also download Lost Sense at &lt;a href=&#34;https://itunes.apple.com/sg/app/lost-sense/id995634840?mt=8&#34;&gt;IOS App - Lost Sense&lt;/a&gt; which simply makes use of the weather api to inform the user of the weather in Singapore and allow them to plan their schedule accordingly to catch either the sunrise or sunset!&lt;/h4&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;

&lt;h4 id=&#34;beside-all-these-i-write-blogs-participate-in-hackathons-attend-meetups-during-my-spare-time-if-you-would-be-interested-to-work-with-me-feel-free-to-either-drop-me-an-email-via-the-contact-form-contact-or-read-about-some-articles-that-i-have-written-on-my-blog-blog-i-have-also-written-game-reviews-and-the-analysis-of-them-in-depth-which-you-can-view-at-published-papers-http-sp-academia-edu-richmondgoh&#34;&gt;Beside all these, I write blogs, participate in hackathons, attend meetups during my spare time. If you would be interested to work with me, feel free to either drop me an email via the &lt;a href=&#34;/contact&#34;&gt;contact form&lt;/a&gt; or read about some articles that I have written on my &lt;a href=&#34;/blog&#34;&gt;blog&lt;/a&gt;. I have also written game reviews and the analysis of them in-depth which you can view at &lt;a href=&#34;http://sp.academia.edu/RichmondGoh&#34;&gt;Published Papers&lt;/a&gt;.&lt;/h4&gt;

&lt;p&gt;&lt;/br&gt;
&lt;/br&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>